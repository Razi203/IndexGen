# Compiler
CXX = g++

# Compiler flags
# -std=c++17: Use the C++17 standard
# -O3:        Enable high-level optimizations
# -pthread:   Link with the pthreads library for std::thread support
# -Wall:      Enable all compiler warnings
# -MMD -MP:   Generate dependency files (for header changes)
CXXFLAGS = -std=c++17 -O3 -pthread -Wall -MMD -MP

# --- Project Structure ---

# Name of the final executable
TARGET = IndexGen

# Source, Include, and Build directories
SRC_DIR = src
INCLUDE_DIR = include
BUILD_DIR = build

# Add the include directory to the compiler's search path
# This is the crucial part that lets #include "Candidates/file.hpp" work
CXXFLAGS += -I$(INCLUDE_DIR)

# --- Automatic File Discovery ---

# Find all .cpp files in SRC_DIR and its subdirectories
SOURCES = $(shell find $(SRC_DIR) -name "*.cpp")

# Create a list of object files in the BUILD_DIR, mirroring the src structure
OBJECTS = $(patsubst $(SRC_DIR)/%.cpp,$(BUILD_DIR)/%.o,$(SOURCES))

# Create a list of dependency files (generated by -MMD)
DEPS = $(OBJECTS:.o=.d)

# --- Build Rules ---

# The default goal: build the executable, placing it in the ROOT directory
.PHONY: all
all: $(TARGET)

# Rule to link the executable from the object files
# The target is now $(TARGET) (e.g., "IndexGen") instead of $(BUILD_DIR)/$(TARGET)
$(TARGET): $(OBJECTS)
	@echo "Linking $(TARGET)..."
	# No @mkdir needed here since we are building in the current directory
	$(CXX) $(CXXFLAGS) -o $@ $^

# Pattern rule to compile a .cpp from src/ into a .o in build/
# This rule is UNCHANGED
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp
	@echo "Compiling $<..."
	@mkdir -p $(@D) # Create subdirectories in build/ (e.g., build/Candidates/)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

# --- Cleanup ---

# 'make clean' will remove the entire build directory AND the root executable
.PHONY: clean
clean:
	@echo "Cleaning up..."
	rm -rf $(BUILD_DIR)/* $(TARGET)

# --- Dependency Handling ---

# Include all the .d dependency files
# The '-' tells 'make' not to error if the file doesn't exist (e.g., on first build)
-include $(DEPS)